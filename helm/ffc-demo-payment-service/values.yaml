environment: development
name: ffc-demo-payment-service
namespace: ffc-demo
workstream: ffc-demo
image: ffc-demo-payment-service

labels: {}
oidcProvider: dev
okta:
  domain:
  clientId: dummy
  authorizationServerId: dummy
  clientSecret: dummy
b2c:
  url:
  clientId: dummy
  clientSecret: dummy

appInsights:
  key:

azureIdentity:
  clientID: not-a-real-clientID
  resourceID: not-a-real-resourceID

containerConfigMap:
  name: ffc-demo-payment-service-config-map

containerSecret:
  name: ffc-demo-payment-service-container-secret
  type: Opaque

deployment:
  restartPolicy: Always
  priorityClassName: low
  replicas: 1
  minReadySeconds: 5
  redeployOnChange: update this field to force a change
  imagePullSecret:
  runAsNonRoot: true
  runAsUser: 1000

container:
  port: 3004
  imagePullPolicy: IfNotPresent
  requestMemory: 60Mi
  requestCpu: 40m
  limitMemory: 120Mi
  limitCpu: 80m
  readOnlyRootFilesystem: true
  allowPrivilegeEscalation: false
  messageQueueHost: amq
  scheduleQueueAddress: schedule
  scheduleQueueUser: artemis
  scheduleQueuePassword: artemis
  paymentQueueAddress: payment
  paymentQueueUser: artemis
  paymentQueuePassword: artemis
  command: ["/bin/sh","-c"]
  args: ["npm --no-update-notifier run migrate; node index"]

postgresService:
  postgresExternalName:
  postgresUsername: postgres
  postgresPassword: changeme
  postgresDatabase: mine_payments
  postgresHost: ffc-demo-payments-postgres
  # postgresExternalName is the external host name to which PostgreSQL
  # requests should be forwarded. If empty, PostgreSQL is assumed to be
  # within the cluster and accessible via postgresHost
  postgresExternalName:
  postgresPort: 5432

readinessProbe:
  path: /healthy
  port: 3004
  initialDelaySeconds: 60
  periodSeconds: 10
  failureThreshold: 3

livenessProbe:
  path: /healthz
  port: 3004
  initialDelaySeconds: 70
  periodSeconds: 10
  failureThreshold: 3
