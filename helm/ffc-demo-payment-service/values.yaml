environment: development
name: ffc-demo-payment-service
namespace: ffc-demo
workstream: ffc-demo
image: ffc-demo-payment-service

labels: {}
oidcProvider: dev
okta: {}
b2c: {}

containerConfigMap:
  name: my-config-map

containerSecret:
  name: ffc-demo-web-container-secret
  type: Opaque

serviceAccount:
  name: ffc-demo-payment-service-account

deployment:
  restartPolicy: Always
  priorityClassName: low
  replicas: 1
  minReadySeconds: 5
  redeployOnChange: update this field to force a change
  imagePullSecret:
  runAsNonRoot: true
  runAsUser: 1000

container:
  port: 3004
  imagePullPolicy: IfNotPresent
  requestMemory: 60Mi
  requestCpu: 40m
  limitMemory: 120Mi
  limitCpu: 80m
  readOnlyRootFilesystem: true
  allowPrivilegeEscalation: false
  scheduleQueueName: schedule
  scheduleQueueEndpoint: http://ffc-demo-payment-message-queue:9324
  scheduleQueueRegion: eu-west-2
  scheduleCreateQueue: false
  paymentQueueName: payment
  paymentQueueEndpoint: http://ffc-demo-payment-message-queue:9324
  paymentQueueRegion: eu-west-2
  paymentCreateQueue: false
  command: ["/bin/sh","-c"]
  args: ["npm --no-update-notifier run migrate; node index"]

postgresService:
  postgresUsername: postgres@mine-support2
  postgresPassword: changeme
  postgresDatabase: mine_payments
  postgresHost: ffc-demo-payments-postgres
  postgresPort: 5432

readinessProbe:
  path: /healthy
  port: 3004
  initialDelaySeconds: 60
  periodSeconds: 10
  failureThreshold: 3

livenessProbe:
  path: /healthz
  port: 3004
  initialDelaySeconds: 70
  periodSeconds: 10
  failureThreshold: 3
