environment: development
name: ffc-demo-payment-service
namespace: ffc-demo
workstream: ffc-demo
image: ffc-demo-payment-service

labels: {}

appInsights:
  key:

azureIdentity:
  clientID: not-a-real-clientID
  resourceID: not-a-real-resourceID

containerConfigMap:
  name: ffc-demo-payment-service-config-map

containerSecret:
  name: ffc-demo-payment-service-container-secret
  type: Opaque

deployment:
  restartPolicy: Always
  priorityClassName: low
  replicas: 1
  minReadySeconds: 5
  imagePullSecret:
  useLinkerd: true

container:
  port: 3004
  imagePullPolicy: IfNotPresent
  requestMemory: 5Mi
  requestCpu: 5m
  limitMemory: 120Mi
  limitCpu: 80m
  messageQueueHost: amq
  scheduleSubscriptionAddress: schedule
  paymentSubscriptionAddress: payment
  scheduleTopicAddress: schedule
  paymentTopicAddress: payment
  eventHost: kafka
  eventPort: 9093
  eventMechanism: scram-sha-512
  eventClientId: ffc-demo-payment-service
  eventConsumerGroupId: ffc-demo-payment-service-claim-update
  claimUpdateTopicName: ffc-demo-collector-claim-update
  claimUpdateTopic: ffc-demo-claim-update
  claimUpdateFromBeginning: true

postgresService:
  postgresDb: ffc_demo_payment_service
  postgresqlHost: ffc-demo-payments-postgres
  postgresPort: 5432
  postgresSchema: public
  postgresUser: postgres

readinessProbe:
  path: /healthy
  port: 3004
  initialDelaySeconds: 60
  periodSeconds: 10
  failureThreshold: 3

livenessProbe:
  path: /healthz
  port: 3004
  initialDelaySeconds: 70
  periodSeconds: 10
  failureThreshold: 3

aadPodIdentity: true
